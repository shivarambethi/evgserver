name: Build and Deploy to AKS

on:
  push:
    branches:
      - main   # Change if you use another branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Azure Login
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # This must be JSON from `az ad sp create-for-rbac --sdk-auth`

      # 3. Azure ACR Login
      - name: Azure ACR Login
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      # 4. Build & Push Docker Image
      - name: Build and Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.ACR_NAME }}.azurecr.io/driverserver:${{ github.sha }}
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      # 5. Set AKS context
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AKS_RG }}
          cluster-name: ${{ secrets.AKS_CLUSTER }}

      # 6. Update Kubernetes manifest with new image
      - name: Update image in deployment.yml
        run: |
          sed -i "s|image: .*|image: $IMAGE_NAME|g" k8s/deployment.yml

      # 7. Deploy to AKS
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/
