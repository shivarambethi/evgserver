name: Build and Deploy to AKS

on:
  push:
    branches:
      - testing

env:
  ACR_NAME: evgacr                        # ACR name (without .azurecr.io)
  IMAGE_NAME: driverserver                 # Image name
  RESOURCE_GROUP: aks-cicd-rg              # Azure resource group
  CLUSTER_NAME: evg-k8s-cluster            # AKS cluster name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Azure Login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Login to ACR
      - name: Azure ACR Login
        run: az acr login --name $ACR_NAME

      # 4. Build and push Docker image
      - name: Build and Push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -f evgserver/Dockerfile -t $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG .
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG

      # 5. Get AKS credentials
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --overwrite-existing

      # 6. Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl set image deployment/$IMAGE_NAME $IMAGE_NAME=$ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }}
          kubectl rollout status deployment/$IMAGE_NAME
