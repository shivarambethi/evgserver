package com.evgateway.server.pojo;

import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "menu")
@JsonIgnoreProperties(ignoreUnknown = true, value = { "permissions" })
public class Menu extends BaseEntity {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8398337018625834262L;

	@Column(name = "name", unique = true, length = 50)
	private String menuName;
	@Column
	private long parentMenu = 0;
	@Column(name = "flag", nullable = false)
	private boolean flag = false;

	private Set<Permission> permissions;

	@Column(name = "url", unique = true, length = 50)
	private String url;

	private String icon;

	@Column(name = "parent", nullable = false)
	private boolean parent = false;

	public Menu() {
	}

	public Menu(String menuName, Set<Permission> permissions) {
		this.menuName = menuName;
		this.permissions = permissions;
	}

	public Menu(String menuName) {

		this.menuName = menuName;
	}

	public String getMenuName() {
		return this.menuName;
	}

	public void setMenuName(String menuName) {
		this.menuName = menuName;
	}

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@ManyToMany(mappedBy = "permission", fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.REFRESH })
	@Transient
	public Set<Permission> getPermissions() {
		return permissions;
	}

	public void setPermissions(Set<Permission> permissions) {
		this.permissions = permissions;
	}

	@Override
	public String toString() {
		return String.format("%s(id=%d, menuName='%s')", this.getClass().getSimpleName(), this.getId(),
				this.getMenuName());
	}

	@Override
	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null)
			return false;

		if (o instanceof Menu) {
			final Menu other = (Menu) o;
			return BaseEntity.equal(getId(), other.getId()) && BaseEntity.equal(getMenuName(), other.getMenuName());
		}
		return false;
	}

	public long getParentMenu() {
		return parentMenu;
	}

	public void setParentMenu(long parentMenu) {
		this.parentMenu = parentMenu;
	}

	public boolean isFlag() {
		return flag;
	}

	public void setFlag(boolean flag) {
		this.flag = flag;
	}

	public String getIcon() {
		return icon;
	}

	public void setIcon(String icon) {
		this.icon = icon;
	}

	public boolean isParent() {
		return parent;
	}

	public void setParent(boolean parent) {
		this.parent = parent;
	}

	@Override
	public int hashCode() {
		return BaseEntity.hashCode(getId(), getMenuName());
	}

}
